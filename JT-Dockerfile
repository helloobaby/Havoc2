# Jenkins LTS DOCKERFILE for Havoc-C2-teamserver
# Havoc-Teamserver
#
# Usage:
#    Build the image:
#	sudo docker build -t jenkins-havoc-teamserver -f JT-Dockerfile .
#
#    Run the image:
#	docker run -p7766:8080 -it -d -v havoc-c2-data:/Data jenkins-havoc-teamserver
#
###################################################################
FROM jenkins/jenkins:lts
#
# ---- Install via APT ----
USER root
USER jenkins
# 
# ---- Establish Volumes ----
#
VOLUME /var/jenkins_home
#
# ---- Setup Jenkins ----
ENV JAVA_OPTS -Djenkins.install.runSetupWizard=false
ENV CASC_JENKINS_CONFIG /var/jenkins_home/casc.yaml
COPY plugins.txt /usr/share/jenkins/ref/plugins.txt
#
# ----Further Customize Jenkins through custom groovy scripts:----
# COPY custom.groovy /usr/share/jenkins/ref/init.groovy.d/custom.groovy
#
# ------------------Install Extra Software & Tools------------------
#
# ----Env Setup----
# RUN mkdir /Tools
# CHMOD 777 /Tools
# 
# ----Build Env Stuff----
USER root
ENV PATH=/root/.local/bin:$PATH
ENV USER=root
RUN touch /etc/apt/sources.list
RUN echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic main restricted" >> /etc/apt/sources.list
RUN echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates main restricted" >> /etc/apt/sources.list
RUN echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic universe" >> /etc/apt/sources.list
RUN echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates universe" >> /etc/apt/sources.list
RUN echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic multiverse" >> /etc/apt/sources.list
RUN echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates multiverse" >> /etc/apt/sources.list
RUN echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb http://security.ubuntu.com/ubuntu bionic-security main restricted" >> /etc/apt/sources.list
RUN echo "deb http://security.ubuntu.com/ubuntu bionic-security universe" >> /etc/apt/sources.list
RUN echo "deb http://security.ubuntu.com/ubuntu bionic-security multiverse" >> /etc/apt/sources.list
RUN echo "deb http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse" >> /etc/apt/sources.list
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32
RUN apt update \
	&& apt -y install \
	alien \
	debhelper \
	devscripts \
	golang-go \
	nasm \
	mingw-w64 \
	dh-golang \
	dh-make \
	fakeroot \
	pkg-config \
	python3-all-dev \
	python3-pip \
	rpm \
	sudo \
	wget \
	libspdlog-dev \
	libqt5websockets5-dev \
	qtbase5-dev \
	qtchooser \
	qt5-qmake \
	qtbase5-dev-tools \
	&& pip install --upgrade jsonschema --break-system-packages
#
# Build cmake as the repo version is out-of-date...
RUN wget https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-Linux-x86_64.sh -O cmake.sh
RUN sh cmake.sh --prefix=/usr/local/ --exclude-subdir
#
# Setting up latest Go
RUN wget https://go.dev/dl/go1.19.1.linux-amd64.tar.gz -O go1.19.1.tar.gz
RUN rm -rf /usr/local/go && tar -C /usr/local -xzf go1.19.1.tar.gz
RUN echo 'export PATH=$PATH:/usr/local/go/bin' > /var/jenkins_home/.profile
RUN rm /usr/bin/go
RUN cp /usr/local/go/bin/go /usr/bin/go
RUN go version
#
# Because Go doesn't just go...
RUN go env -w GOFLAGS=-mod=mod
#
# Install Jenkins Plugins
RUN jenkins-plugin-cli --plugin-file /usr/share/jenkins/ref/plugins.txt
#
# Copy over Havoc TeamServer files for local Build
COPY . Build/
RUN chmod -R 777 Build/
#
USER jenkins
#
#
